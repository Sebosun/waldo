{"version":3,"sources":["components/Header.js","components/Game.js","components/Won.js","Images/level-1.jpg","functions/checkWaldo.js","components/Leaderboards.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","this","props","text","found","waldo","style","textDecoration","odlaw","wizard","React","Component","Game","useState","display","setDisplay","relSize","setRelSize","position","top","left","displayStyle","setDisplayStyle","useEffect","trackTime","onClick","e","submitChoice","event","console","log","pageY","pageX","rect","target","getBoundingClientRect","x","clientX","y","clientY","changeDisplay","src","image","alt","Won","name","setName","submitted","setSubmitted","stopGame","showLeaderboards","time","onSubmit","addToLeaderboards","placeholder","value","type","onChange","checkWaldo","clickPos","charPos","aimbot","Leaderboards","leader","setLeader","firebase","firestore","collection","orderBy","limit","onSnapshot","snapshot","leaderRecord","docChanges","map","change","doc","data","record","index","userName","App","a","add","timestampStart","FieldValue","serverTimestamp","timestampEnd","newUserClick","setState","userId","id","componentDidMount","serverUpdate","positions","docs","_doc","checkWin","obj","arr","prop","push","every","state","won","gameStarted","bind","calcTime","character","prevState","update","then","get","secondsStarted","seconds","startDate","Date","secondsEnded","timeElapsed","microSecStart","nanoseconds","realTimePassed","Math","floor","catch","error","preventDefault","waldoImg","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c6c281a.chunk.js","sourcesContent":["import \"./Header.css\";\nimport React from \"react\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <div>{this.props.text}</div>\n\n        {this.props.found ? (\n          <div className=\"characters\">\n            {this.props.found.waldo ? (\n              <div style={{ textDecoration: \"line-through\" }}>Waldo</div>\n            ) : (\n              <div>Waldo</div>\n            )}\n            {this.props.found.odlaw ? (\n              <div style={{ textDecoration: \"line-through\" }}>Odlaw</div>\n            ) : (\n              <div>Odlaw</div>\n            )}\n            {this.props.found.wizard ? (\n              <div style={{ textDecoration: \"line-through\" }}>Wizard</div>\n            ) : (\n              <div>Wizard</div>\n            )}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Game.css\";\n\nexport default function Game(props) {\n  const [display, setDisplay] = useState(false);\n  const [relSize, setRelSize] = useState([]);\n  const [displayStyle, setDisplayStyle] = useState({\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  });\n\n  // handles the dropdown menu, so that it appears under the clicked position\n  function changeDisplay(event) {\n    console.log(event.pageY, event.pageX);\n\n    // gets the rel size of the image\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left; //x position within the element.\n    const y = event.clientY - rect.top; //y position within the element.\n    console.log(y, x);\n    setRelSize([y, x]);\n    setDisplayStyle({ ...displayStyle, top: event.pageY, left: event.pageX });\n    setDisplay(!display);\n  }\n\n  // when the Game loads, starts the timer\n  useEffect(() => {\n    props.trackTime();\n  }, []);\n\n  return (\n    <div className=\"gameContainer\">\n      {display ? (\n        <div className=\"dropMenu\" style={displayStyle}>\n          <button\n            onClick={(e) => {\n              setDisplay(!display);\n              props.submitChoice(relSize, \"Waldo\");\n            }}\n          >\n            Waldo\n          </button>\n          <button\n            onClick={(e) => {\n              setDisplay(!display);\n              props.submitChoice(relSize, \"Odlaw\");\n            }}\n          >\n            Odlaw\n          </button>\n          <button\n            onClick={(e) => {\n              setDisplay(!display);\n              props.submitChoice(relSize, \"Wizard\");\n            }}\n          >\n            Wizard\n          </button>\n        </div>\n      ) : null}\n      <div onClick={(event) => changeDisplay(event)}>\n        <img src={props.image} alt=\"waldo\" />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./Won.css\";\n\nexport default function Won(props) {\n  const [name, setName] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n\n  function changeName(event) {\n    const { name, value } = event.target;\n    setName(value);\n  }\n\n  return (\n    <div className=\"winningScreen\">\n      {submitted ? (\n        <div className=\"wonContainer\">\n          <div>Your score has been submitted!</div>\n          <button\n            onClick={() => {\n              props.stopGame();\n              props.showLeaderboards();\n            }}\n          >\n            Leaderboards\n          </button>\n        </div>\n      ) : (\n        <div className=\"wonContainer\">\n          <div>You won, congrats!</div>\n          <div>You have finished in {props.time} seconds !</div>\n          <form\n            onSubmit={(e) => {\n              setSubmitted(true);\n              return props.addToLeaderboards(e, name);\n            }}\n          >\n            <label>\n              Submit your score!\n              <br />\n              <input\n                placeholder=\"Enter your nickname!\"\n                value={name}\n                name=\"name\"\n                type=\"text\"\n                onChange={changeName}\n              />\n              <br />\n              <button> Submit! </button>\n            </label>\n          </form>{\" \"}\n        </div>\n      )}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/level-1.8b871ac1.jpg\";","// checks if waldo has been found, based on click position, waldos position etc.\nfunction checkWaldo(clickPos, charPos, aimbot) {\n  // screenSize[0] = Y same with clickPos and charPos\n  // screenSize[1] = X\n  if (\n    clickPos[0] >= charPos[0] - aimbot &&\n    clickPos[0] <= charPos[0] + aimbot\n  ) {\n    if (\n      clickPos[1] >= charPos[1] - aimbot &&\n      clickPos[1] <= charPos[1] + aimbot\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\n// waldo at 400 / 200\n\n// but\n\n// size has been decreased to 1300 / 800\n\nexport default checkWaldo;\n","import React, { useState, useEffect } from \"react\";\nimport { firebase } from \"@firebase/app\";\nimport \"./Leaderboards.css\";\n\nexport default function Leaderboards(props) {\n  let [leader, setLeader] = useState(null);\n  function loadScores() {\n    // Create the query to load the last 12 messages and listen for new ones.\n    const query = firebase\n      .firestore()\n      .collection(\"leaderboards\")\n      .orderBy(\"time\", \"asc\")\n      .limit(10);\n    query.onSnapshot(function (snapshot) {\n      let leaderRecord = snapshot.docChanges().map(function (change) {\n        let message = change.doc.data();\n        return message;\n      });\n      setLeader(leaderRecord);\n    });\n  }\n\n  useEffect(() => {\n    loadScores();\n  }, []);\n\n  return (\n    <div className=\"leaderboards\">\n      <div className=\"container\">\n        {leader\n          ? leader.map((record, index) => {\n              return (\n                <div className=\"record\" key={index}>\n                  <div>{record.userName}</div>\n                  <div>{record.time}s</div>\n                </div>\n              );\n            })\n          : null}\n      </div>\n      <button onClick={props.showLeaderboards}>Close</button>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Game from \"./components/Game\";\nimport Won from \"./components/Won\";\nimport waldoImg from \"./Images/level-1.jpg\";\nimport checkWaldo from \"./functions/checkWaldo\";\nimport { firebase } from \"@firebase/app\";\nimport Leaderboards from \"./components/Leaderboards\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      positions: [],\n      found: {\n        waldo: false,\n        odlaw: false,\n        wizard: false,\n      },\n      won: false,\n      gameStarted: false,\n      showLeaderboards: false,\n      userId: null,\n      time: null,\n    };\n    this.submitChoice = this.submitChoice.bind(this);\n    this.trackTime = this.trackTime.bind(this);\n    this.checkWin = this.checkWin.bind(this);\n    this.calcTime = this.calcTime.bind(this);\n    this.addToLeaderboards = this.addToLeaderboards.bind(this);\n    this.showLeaderboards = this.showLeaderboards.bind(this);\n    this.stopGame = this.stopGame.bind(this);\n  }\n  //grabs the character positions from the firebase\n\n  // adds a new \"user\" with unique id to firebase\n  // saves the id to state, so later we can calculate their time\n  trackTime = async () => {\n    const newUserClick = await firebase\n      .firestore()\n      .collection(\"time-elapsed\")\n      .add({\n        userName: \"\",\n        timestampStart: firebase.firestore.FieldValue.serverTimestamp(),\n        timestampEnd: null,\n      });\n    this.setState({ userId: newUserClick.id });\n  };\n\n  // verifies whether the position has been 'hit'\n  submitChoice(position, character) {\n    if (character === \"Waldo\") {\n      if (checkWaldo(position, this.state.positions[0].waldo, 40)) {\n        this.setState((prevState) => {\n          return { found: { ...prevState.found, waldo: true } };\n        });\n      }\n    } else if (character === \"Odlaw\") {\n      if (checkWaldo(position, this.state.positions[0].odlaw, 40)) {\n        this.setState((prevState) => {\n          return { found: { ...prevState.found, odlaw: true } };\n        });\n      }\n    } else if (character === \"Wizard\") {\n      if (checkWaldo(position, this.state.positions[0].wizard, 40)) {\n        this.setState((prevState) => {\n          return { found: { ...prevState.found, wizard: true } };\n        });\n      }\n    }\n  }\n\n  // get the waldo positions from the server on component load\n  componentDidMount = () => {\n    firebase\n      .firestore()\n      .collection(\"waldo\")\n      .onSnapshot((serverUpdate) => {\n        const positions = serverUpdate.docs.map((_doc) => {\n          const data = _doc.data();\n          return data;\n        });\n        this.setState({ positions: positions });\n      });\n    // this.trackTime();\n  };\n  // on update check if the winning condition has been met\n  componentDidUpdate() {\n    // second statement needs to be added to avoid infinite regress\n    if (this.checkWin(this.state.found) && this.state.won !== true) {\n      this.setState({ won: true });\n      firebase\n        .firestore()\n        .collection(\"time-elapsed\")\n        .doc(this.state.userId)\n        .update({\n          timestampEnd: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n        .then(() => this.calcTime());\n    }\n    // this.calcTime();\n  }\n  //calculates how much time passed since the start of the game till it was completed\n  calcTime() {\n    firebase\n      .firestore()\n      .collection(\"time-elapsed\")\n      .doc(`${this.state.userId}`)\n      .get()\n      .then((doc) => {\n        // This is messy, but works.\n        console.log(doc.data().timestampEnd);\n        const secondsStarted = doc.data().timestampStart.seconds;\n        const startDate = new Date(secondsStarted * 1000);\n        const secondsEnded = doc.data().timestampEnd.seconds;\n        const endDate = new Date(secondsEnded * 1000);\n        const timeElapsed = endDate - startDate;\n\n        const microSecStart = doc.data().timestampStart.nanoseconds;\n        const microSecEnd = doc.data().timestampEnd.nanoseconds;\n        const microElapsed = (microSecEnd - microSecStart) / 1000000000;\n\n        let realTimePassed = timeElapsed / 1000 + microElapsed;\n        realTimePassed = Math.floor(realTimePassed * 100) / 100;\n        this.setState({ time: realTimePassed });\n      })\n      .catch((error) => {\n        console.log(\"Error getting time\", error);\n      });\n  }\n  // runs through an object, creates an array from it and checks\n  // if every arr item is true\n  checkWin = (obj) => {\n    let arr = [];\n    for (const prop in obj) {\n      arr.push(obj[prop]);\n    }\n    return arr.every((value) => value);\n  };\n\n  // DONE-  TODO Pop-up prompt after the game has been won - > upload score to the database\n  // TODO Leaderboards\n\n  addToLeaderboards(event, name) {\n    event.preventDefault();\n    const leaderboards = firebase.firestore().collection(\"leaderboards\");\n    leaderboards.add({\n      userName: name,\n      time: this.state.time,\n      userId: this.state.userId,\n    });\n  }\n\n  showLeaderboards() {\n    this.setState({ showLeaderboards: !this.state.showLeaderboards });\n  }\n\n  stopGame() {\n    this.setState({ gameStarted: !this.state.gameStarted });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.gameStarted ? (\n          <div>\n            <Header found={this.state.found} text=\"Characters found: \" />\n            {this.state.won ? (\n              <Won\n                time={this.state.time}\n                addToLeaderboards={this.addToLeaderboards}\n                stopGame={this.stopGame}\n                showLeaderboards={this.showLeaderboards}\n              />\n            ) : null}\n            <Game\n              trackTime={this.trackTime}\n              submitChoice={this.submitChoice}\n              image={waldoImg}\n            />\n          </div>\n        ) : !this.state.showLeaderboards ? (\n          <div>\n            <Header text=\"Waldo Game\" />\n            <div className=\"mainMenu\">\n              <button\n                onClick={() =>\n                  this.setState({\n                    gameStarted: !this.state.gameStarted,\n                  })\n                }\n              >\n                Start Game{\" \"}\n              </button>\n              <button onClick={() => this.showLeaderboards()}>\n                {\" \"}\n                Show leaderboards{\" \"}\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            {\" \"}\n            <Header text=\"Leaderboards\" />\n            <Leaderboards showLeaderboards={this.showLeaderboards} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { firebase } from \"@firebase/app\";\nrequire(\"firebase/firestore\");\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAja6ksUMffrx9YEEsJFETzQpRxGxtq7-w\",\n  authDomain: \"find-waldo-245cb.firebaseapp.com\",\n  projectId: \"find-waldo-245cb\",\n  storageBucket: \"find-waldo-245cb.appspot.com\",\n  messagingSenderId: \"129714425454\",\n  appId: \"1:129714425454:web:ed1685dbb7e3b65dcda07f\",\n  measurementId: \"G-Z51LKDCW8W\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}